import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class QuizApp extends JFrame {
    private JLabel questionLabel;
    private JRadioButton[] optionButtons;
    private JButton nextButton;
    private JButton finishButton;

    private String[] questions = {
            "What is the capital of France?",
            "Which planet is known as the Red Planet?",
            "Who wrote 'Romeo and Juliet'?"
    };

    private String[][] options = {
            {"Paris", "London", "Berlin", "Rome"},
            {"Mars", "Jupiter", "Venus", "Saturn"},
            {"William Shakespeare", "Charles Dickens", "Jane Austen", "Mark Twain"}
    };

    private String[] answers = {
            "Paris", "Mars", "William Shakespeare"
    };

    private int currentQuestionIndex = 0;
    private int score = 0;

    public QuizApp() {
        setTitle("Quiz App");
        setSize(400, 300);
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setLocationRelativeTo(null);

        JPanel mainPanel = new JPanel(new BorderLayout());

        questionLabel = new JLabel(questions[currentQuestionIndex]);
        mainPanel.add(questionLabel, BorderLayout.NORTH);

        JPanel optionsPanel = new JPanel(new GridLayout(0, 1));
        ButtonGroup optionGroup = new ButtonGroup();
        optionButtons = new JRadioButton[4];
        for (int i = 0; i < 4; i++) {
            optionButtons[i] = new JRadioButton(options[currentQuestionIndex][i]);
            optionGroup.add(optionButtons[i]);
            optionsPanel.add(optionButtons[i]);
        }
        mainPanel.add(optionsPanel, BorderLayout.CENTER);

        nextButton = new JButton("Next");
        nextButton.addActionListener(new NextButtonListener());
        finishButton = new JButton("Finish");
        finishButton.addActionListener(new FinishButtonListener());
        JPanel buttonPanel = new JPanel(new FlowLayout());
        buttonPanel.add(nextButton);
        buttonPanel.add(finishButton);
        mainPanel.add(buttonPanel, BorderLayout.SOUTH);

        add(mainPanel);
        setVisible(true);
    }

    private class NextButtonListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            if (currentQuestionIndex < questions.length - 1) {
                checkAnswer();
                currentQuestionIndex++;
                updateQuestion();
            } else {
                JOptionPane.showMessageDialog(QuizApp.this, "No more questions. Click Finish to see your score.", "Info", JOptionPane.INFORMATION_MESSAGE);
            }
        }
    }

    private class FinishButtonListener implements ActionListener {
        @Override
        public void actionPerformed(ActionEvent e) {
            checkAnswer();
            JOptionPane.showMessageDialog(QuizApp.this, "Your score: " + score + "/" + questions.length, "Quiz Score", JOptionPane.INFORMATION_MESSAGE);
            dispose();
        }
    }

    private void checkAnswer() {
        for (int i = 0; i < optionButtons.length; i++) {
            if (optionButtons[i].isSelected() && optionButtons[i].getText().equals(answers[currentQuestionIndex])) {
                score++;
                break;
            }
        }
    }

    private void updateQuestion() {
        questionLabel.setText(questions[currentQuestionIndex]);
        for (int i = 0; i < optionButtons.length; i++) {
            optionButtons[i].setText(options[currentQuestionIndex][i]);
            optionButtons[i].setSelected(false);
        }
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(QuizApp::new);
    }
}
