import java.util.Scanner;

public class BattleshipGame {
    public static void main(String[] args) {
        Scanner scanner = new Scanner(System.in);

        System.out.println("Welcome to Battleship!");

        int boardSize = 5;
        char[][] playerBoard = initializeBoard(boardSize);
        char[][] computerBoard = initializeBoard(boardSize);

        placeShips(computerBoard);

        int playerShips = countShips(playerBoard);
        int computerShips = countShips(computerBoard);

        while (playerShips > 0 && computerShips > 0) {
            System.out.println("Your Board:");
            printBoard(playerBoard);
            System.out.println("Computer's Board:");
            printHiddenBoard(computerBoard);

            playerTurn(scanner, computerBoard);
            computerTurn(playerBoard);

            playerShips = countShips(playerBoard);
            computerShips = countShips(computerBoard);
        }

        if (playerShips == 0) {
            System.out.println("Game over! The computer wins.");
        } else {
            System.out.println("Congratulations! You sank the computer's battleship. You win!");
        }

        scanner.close();
    }

    private static char[][] initializeBoard(int size) {
        char[][] board = new char[size][size];
        for (int i = 0; i < size; i++) {
            for (int j = 0; j < size; j++) {
                board[i][j] = ' ';
            }
        }
        return board;
    }

    private static void printBoard(char[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                System.out.print(board[i][j] + " ");
            }
            System.out.println();
        }
    }

    private static void printHiddenBoard(char[][] board) {
        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 'X') {
                    System.out.print("  ");
                } else {
                    System.out.print(board[i][j] + " ");
                }
            }
            System.out.println();
        }
    }

    private static void placeShips(char[][] board) {
        int shipsToPlace = 3;

        while (shipsToPlace > 0) {
            int row = (int) (Math.random() * board.length);
            int col = (int) (Math.random() * board.length);

            if (board[row][col] == ' ') {
                board[row][col] = 'S';
                shipsToPlace--;
            }
        }
    }

    private static int countShips(char[][] board) {
        int shipCount = 0;

        for (int i = 0; i < board.length; i++) {
            for (int j = 0; j < board[i].length; j++) {
                if (board[i][j] == 'S') {
                    shipCount++;
                }
            }
        }

        return shipCount;
    }

    private static void playerTurn(Scanner scanner, char[][] computerBoard) {
        System.out.print("Enter row (1-5) and column (1-5) to attack: ");
        int row = scanner.nextInt() - 1;
        int col = scanner.nextInt() - 1;

        if (row >= 0 && row < computerBoard.length && col >= 0 && col < computerBoard.length) {
            if (computerBoard[row][col] == 'S') {
                System.out.println("You hit the computer's battleship!");
                computerBoard[row][col] = 'X';
            } else if (computerBoard[row][col] == 'X') {
                System.out.println("You already attacked this position. Try again.");
            } else {
                System.out.println("You missed!");
                computerBoard[row][col] = 'O';
            }
        } else {
            System.out.println("Invalid coordinates. Try again.");
        }
    }

    private static void computerTurn(char[][] playerBoard) {
        int row = (int) (Math.random() * playerBoard.length);
        int col = (int) (Math.random() * playerBoard.length);

        if (playerBoard[row][col] == 'S') {
            System.out.println("The computer hit your battleship!");
            playerBoard[row][col] = 'X';
        } else if (playerBoard[row][col] == 'X' || playerBoard[row][col] == 'O') {
            // Computer already attacked this position, try again
            computerTurn(playerBoard);
        } else {
            System.out.println("The computer missed!");
            playerBoard[row][col] = 'O';
        }
    }
}
